@model DrCleanCare.Models.AddSOViewModel

@{
    ViewBag.Title = "Kinh doanh";
    Layout = "~/Views/Shared/_Admin.cshtml";

    decimal soAmountBT = 0;
    decimal soVAT = 0;
    decimal soGrandTotal = 0;
}

<div id="page-wrapper" class="container-fluid">
    <div class="row">
        <div class="col-lg-12">
            <h4 class="page-header form-title text-primary"><i class="fa fa-database"></i> @ViewBag.Title</h4>
        </div>
    </div>
    @using (Html.BeginForm("Add", "Order", FormMethod.Post, new { @class = "form-horizontal", @enctype = "multipart/form-data" }))
    {
        <div class="row">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
        </div>
        <!-- /.col-lg-12 -->
        <div class="row">
            <div class="col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-plus-square"></i> Thêm đơn hàng
                    </div>
                    <div class="panel-body">
                        <div class="form-group">
                            <label class="control-label col-md-4 col-lg-3">Nhân viên bán hàng</label>
                            <div class="col-sm-8 col-lg-9">
                                @Html.DropDownListFor(model => model.EmployeeId, ViewBag.Employees as IEnumerable<SelectListItem>, "--Chọn nhân viên--", new { @class = "form-control", @style = "width:300px;" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-4 col-lg-3">Số đơn hàng / ngày lập</label>
                            <div class="col-sm-8 col-lg-9">
                                <div style="display:table; width:100%;">
                                    <div style="display:table-row">
                                        <div style="display:table-cell; vertical-align:top;">
                                            @Html.TextBoxFor(model => model.OrderNo, new { @class = "form-control", @placeholder = "Số đơn hàng", @type = "text", @style = "width: 148px;" })
                                            @Html.ValidationMessageFor(model => model.OrderNo, null, new { @class = "help-inline" })
                                        </div>
                                        <div style="display:table-cell; vertical-align:top; width:100%;">
                                            @Html.TextBoxFor(model => model.OrderDate, new { @class = "form-control text-center", @placeholder = "Ngày bán", @type = "text", @style = "width: 148px; margin-left:4px;" })
                                            @Html.ValidationMessageFor(model => model.OrderDate, null, new { @class = "help-inline" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-4 col-lg-3">MST / Loại hóa đơn / HTTT</label>
                            <div class="col-sm-8 col-lg-9">
                                <div style="display:table;">
                                    <div style="display:table-row">
                                        <div style="display:table-cell; vertical-align:top;">
                                            @Html.TextBoxFor(model => model.TaxCode, new { @class = "form-control", @placeholder = "Mã số thuế", @type = "text", @style = "width:148px;" })
                                            @Html.ValidationMessageFor(model => model.TaxCode, null, new { @class = "help-inline" })
                                        </div>
                                        <div style="display:table-cell; vertical-align:top;">
                                            @Html.DropDownListFor(model => model.OrderType, ViewBag.OrderTypes as IEnumerable<SelectListItem>, null, new { @class = "form-control", @style = "width:148px; margin-left:4px;" })
                                            @Html.ValidationMessageFor(model => model.OrderType, null, new { @class = "help-inline" })
                                        </div>
                                        <div style="display:table-cell; vertical-align:top; width: 100%;">
                                            @Html.DropDownListFor(model => model.PaymentTypeId, ViewBag.PaymentTypes as IEnumerable<SelectListItem>, null, new { @class = "form-control", @style = "width:148px; margin-left:4px;" })
                                            @Html.ValidationMessageFor(model => model.PaymentTypeId, null, new { @class = "help-inline" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-4 col-lg-3">Tên khách hàng</label>
                            <div class="col-sm-8 col-lg-9">
                                <div style="display:table; width:100%;">
                                    <div style="display:table-row">
                                        <div style="display:table-cell;">
                                            @Html.TextBoxFor(model => model.CustomerName, new { @class = "form-control", @placeholder = "Tên khách hàng", @type = "text" })
                                            @Html.ValidationMessageFor(model => model.CustomerName, null, new { @class = "help-inline" })
                                        </div>
                                        <div style="display:table-cell;">
                                            <a id="btn-sel-customer" href="#" class="btn btn-default btn-sm" style="width:40px; height:34px; margin-left:8px;" data-toggle="modal" data-target="#exampleModal">...</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-4 col-lg-3">Địa chỉ khách hàng</label>
                            <div class="col-sm-8 col-lg-9">
                                @Html.TextBoxFor(model => model.CustomerAddress, new { @class = "form-control", @placeholder = "Địa chỉ khách hàng", @type = "text" })
                                @Html.ValidationMessageFor(model => model.CustomerAddress, null, new { @class = "help-inline" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-4 col-lg-3">Điện thoại / Email</label>
                            <div class="col-sm-8 col-lg-9">
                                <div style="display:table; width:100%;">
                                    <div style="display:table-row">
                                        <div style="display:table-cell; vertical-align:top;">
                                            @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", @placeholder = "Điện thoại", @type = "text", @style = "width:148px;" })
                                            @Html.ValidationMessageFor(model => model.Phone, null, new { @class = "help-inline" })
                                        </div>
                                        <div style="display:table-cell; vertical-align:top; width:100%;">
                                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = "Email khách hàng", @type = "text", @style = "margin-left:4px;" })
                                            @Html.ValidationMessageFor(model => model.Email, null, new { @class = "help-inline" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="form-group">
                            <label class="control-label col-md-4 col-lg-3">Nhân viên giao / Ngày giao</label>
                            <div class="col-sm-8 col-lg-9">
                                <div style="display:table">
                                    <div style="display:table-row">
                                        <div style="display:table-cell; vertical-align:top;">
                                            @Html.TextBoxFor(model => model.DeliveryName, new { @class = "form-control", @placeholder = "Nhân viên giao hàng", @type = "text", @style = "width:300px;" })
                                            @Html.ValidationMessageFor(model => model.DeliveryName, null, new { @class = "help-inline" })
                                        </div>
                                        <div style="display:table-cell; vertical-align:top; width: 100%;">
                                            @Html.TextBoxFor(model => model.ShippedDate, new { @class = "form-control text-center", @placeholder = "Ngày giao", @type = "text", @style = "margin-left: 4px; width:148px;" })
                                            @Html.ValidationMessageFor(model => model.ShippedDate, null, new { @class = "help-inline" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-4 col-lg-3">Địa chỉ giao hàng</label>
                            <div class="col-sm-8 col-lg-9">
                                @Html.TextBoxFor(model => model.ShipAddress, new { @class = "form-control", @placeholder = "Địa chỉ giao hàng", @type = "text" })
                                @Html.ValidationMessageFor(model => model.ShipAddress, null, new { @class = "help-inline" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-4 col-lg-3">Người nhận</label>
                            <div class="col-sm-8 col-lg-9">
                                @Html.TextBoxFor(model => model.ShipName, new { @class = "form-control", @placeholder = "Người nhận", @type = "text", @style = "width: 300px;" })
                                @Html.ValidationMessageFor(model => model.ShipName, null, new { @class = "help-inline" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-4 col-lg-3">Phí giao hàng</label>
                            <div class="col-sm-8 col-lg-9">
                                @Html.TextBoxFor(model => model.ShippingCost, new { @class = "form-control shipping-cost-input", @placeholder = "Phí giao hàng", @type = "text", @style = "margin-left: 4px; width:148px;" })
                                @Html.ValidationMessageFor(model => model.ShippingCost, null, new { @class = "help-inline" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-4 col-lg-3">Ghi chú</label>
                            <div class="col-sm-8 col-lg-9">
                                @Html.TextAreaFor(model => model.Notes, new { @class = "form-control", @placeholder = "Ghi chú", @type = "text" })
                            </div>
                        </div>
                        <hr style="border: solid 1px dotted #808080; margin: 16px 0;" />
                        <div class="form-group">
                            <div class="col-lg-12">
                                <div id="tbl-so" style="display:table;">
                                    <div style="display:table-row; padding:2px;">
                                        <div style="display:table-cell; white-space:nowrap; padding:2px;">
                                            <label class="control-label">Chi tiết đơn hàng</label>
                                        </div>
                                        <div style="display:table-cell; white-space:nowrap; padding:2px;">
                                            <label class="control-label">Kho</label>
                                        </div>
                                        <div style="display:table-cell; white-space:nowrap; padding:2px;" class="text-center">
                                            <label class="control-label">Số lượng</label>
                                        </div>
                                        <div style="display:table-cell; white-space:nowrap; padding:2px;" class="text-right">
                                            <label class="control-label">Giá trước thuế</label>
                                        </div>
                                        <div style="display:table-cell; white-space:nowrap; padding:2px;" class="text-right">
                                            <label class="control-label">Giá sau thuế</label>
                                        </div>
                                        <div style="display:table-cell; white-space:nowrap; padding:2px;" class="text-right">
                                            <label class="control-label">Thành tiền</label>
                                        </div>
                                        <div style="display:table-cell; padding:2px;" class="text-center">
                                        </div>
                                    </div>
                                    @for (int i = 0; i < Model.OrderDetails.Count; i++)
                                    {
                                        var quantity = (decimal)0;
                                        var unitPrice = (decimal)0;
                                        var unitPriceBT = (decimal)0;

                                        decimal.TryParse(Model.OrderDetails[i].Quantity, out quantity);
                                        decimal.TryParse(Model.OrderDetails[i].UnitPriceBT, out unitPriceBT);
                                        decimal.TryParse(Model.OrderDetails[i].UnitPrice, out unitPrice);

                                        var soLineTotal = quantity * unitPrice;
                                        soAmountBT += quantity * unitPriceBT;
                                        soVAT += quantity * (unitPrice - unitPriceBT);
                                        soGrandTotal += quantity * unitPriceBT;
                                        soGrandTotal += quantity * (unitPrice - unitPriceBT);

                                        <div style="display:table-row;" class="tbl-so-line">
                                            <div style="display:table-cell; padding:2px; vertical-align:top; width:100%;">
                                                @Html.HiddenFor(model => model.OrderDetails[i].ProductId, new { @class = "product-id" })
                                                @Html.TextBoxFor(model => model.OrderDetails[i].ProductName, new { @class = "form-control product-name", @readonly = "readonly", @style = "min-width:140px;" })
                                                @Html.ValidationMessageFor(model => model.OrderDetails[i].ProductId, null, new { @class = "help-inline" })
                                            </div>
                                            <div style="display:table-cell; padding:2px; vertical-align:top;">
                                                @Html.HiddenFor(model => model.OrderDetails[i].StockId, new { @class = "stock-id" })
                                                @Html.TextBoxFor(model => model.OrderDetails[i].StockName, new { @class = "form-control stock-name", @readonly = "readonly", @style = "margin-left:4px; width:140px;" })
                                                @Html.ValidationMessageFor(model => model.OrderDetails[i].StockId, null, new { @class = "help-inline" })
                                            </div>
                                            <div style="display:table-cell; padding:2px; vertical-align:top;">
                                                @Html.TextBoxFor(model => model.OrderDetails[i].Quantity, new { @class = "form-control text-center quantity-input quantity", @placeholder = "Số lượng", @type = "text", @style = "margin-left:4px; width:75px;" })
                                                @Html.ValidationMessageFor(model => model.OrderDetails[i].Quantity, null, new { @class = "help-inline" })
                                            </div>
                                            <div style="display:table-cell; padding:2px; vertical-align:top;">
                                                @Html.TextBoxFor(model => model.OrderDetails[i].UnitPriceBT, new { @class = "form-control text-right price-input unit-price-bt", @placeholder = "Đơn giá", @type = "text", @style = "margin-left:4px; width:115px;" })
                                                @Html.ValidationMessageFor(model => model.OrderDetails[i].UnitPriceBT, null, new { @class = "help-inline" })
                                            </div>
                                            <div style="display:table-cell; padding:2px; vertical-align:top;">
                                                @Html.TextBoxFor(model => model.OrderDetails[i].UnitPrice, "", new { @class = "form-control text-right price-input unit-price", @placeholder = "Giảm giá", @type = "text", @style = "margin-left:4px; width:115px;" })
                                                @Html.ValidationMessageFor(model => model.OrderDetails[i].UnitPrice, null, new { @class = "help-inline" })
                                            </div>
                                            <div style="display:table-cell; padding:2px; vertical-align:top;">
                                                <input class="form-control valid text-right line-amount"
                                                       id="@string.Format("OrderDetails_{0}__Amount", i)"
                                                       name="@string.Format("OrderDetails[{0}].Amount", i)"
                                                       readonly="readonly" style="margin-left:4px; width:115px;" type="text" value="@soLineTotal.ToString("#,##0.##")">
                                            </div>
                                            <div style="display:table-cell; padding:2px; vertical-align:top;" class="text-center">
                                                <a href="#" class="btn btn-danger btn-sm btn-remove-line" style="margin-left:4px;">Xóa</a>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-12">
                                <a id="btn-add-line" href="#" class="btn btn-success btn-sm" style="width:40px;">+</a>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-12">
                                <div style="display:table;">
                                    <div style="display:table-row">
                                        <div style="display:table-cell; padding:2px; width:100%;" class="text-right">
                                            Cộng tiền hàng:
                                        </div>
                                        <div style="display:table-cell; padding:2px;">
                                            <input class="form-control total-amount-bt-input valid text-right" id="TotalAmount" name="TotalAmount" readonly="readonly" style="margin-left:4px; width:148px;" type="text" value="@soAmountBT.ToString("#,##0.##")">
                                        </div>
                                    </div>
                                    <div style="display:table-row">
                                        <div style="display:table-cell; padding:2px; width:100%;" class="text-right">
                                            Tiền thuế GTGT:
                                        </div>
                                        <div style="display:table-cell; padding:2px;">
                                            <input class="form-control total-amount-vat-input valid text-right" id="TotalVAT" name="TotalVAT" readonly="readonly" style="margin-left:4px; width:148px;" type="text" value="@soVAT.ToString("#,##0.##")">
                                        </div>
                                    </div>
                                    <div style="display:table-row">
                                        <div style="display:table-cell; padding:2px; width:100%;" class="text-right">
                                            Tổng tiền thanh toán:
                                        </div>
                                        <div style="display:table-cell; padding:2px;">
                                            <input class="form-control total-amount-input valid text-right" id="GrandTotal" name="GrandTotal" readonly="readonly" style="margin-left:4px; width:148px;" type="text" value="@soGrandTotal.ToString("#,##0.##")">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-12 text-right">
                                <input type="submit" value="Lưu" class="btn btn-sm btn-success" style="width:100px;" />
                                <input type="reset" value="Nhập lại" class="btn btn-sm btn-info" style="width:100px;" />
                                @Html.ActionLink("Trở về", "Index", null, new { @style = "width:100px;", @class = "btn btn-primary btn-sm" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Chọn khách hàng</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-group">
                            <div style="display:table">
                                <div style="display:table-row">
                                    <div style="display:table-cell;" class="form-inline">
                                        <input id="searchText" type="text" class="form-control" placeholder="Từ khóa tìm kiếm" style="width:300px;" />
                                        <input id="btn-search" type="button" class="btn btn-success" value="Tra cứu" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12 customer-list">
                        <table class="table table-hover table-bordered" style="width:auto;">
                            <tr class="alert-success">
                                <th class="text-nowrap text-center">STT</th>
                                <th class="text-nowrap">Tên khách hàng</th>
                                <th class="text-nowrap">Điện thoại</th>
                                <th class="text-nowrap">Địa chỉ</th>
                                <th class="text-nowrap">Thao tác</th>
                            </tr>
                            <tr>
                                <td colspan="7" class="text-danger">Đang nạp dữ liệu....</td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<br />
<br />
<br />
<br />
<br />
<br />
@section Styles {
    <link href="~/Content/datepicker.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-dialog.min.css" rel="stylesheet" />
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/bootstrap-datepicker.js"></script>
    <script src="~/Scripts/jquery.number.min.js"></script>
    <script src="~/Scripts/bootstrap-dialog.min.js"></script>

    <script>

        var g_products;
        var g_stocks;

        var g_customers;
        var g_page_index = 1;
        var g_page_total = 1;

        $("#menu-sale").attr("class", "active");

        $(document).ready(function () {
            getProducts();
            getStocks();
            ajaxSearchCustomers(g_page_index);
            $("#btn-search").click(function () {
                g_page_index = 1;
                ajaxSearchCustomers(g_page_index);
            });
            // setup datetime picker
            $("#OrderDate").datepicker({ format: 'dd/mm/yyyy', todayHighlight: true });
            $("#OrderDate").datepicker("setDate", new Date());
            $('#OrderDate').on('changeDate', function (ev) { $(this).datepicker('hide') });
            $('#OrderDate').datepicker('update');
            $("#ShippedDate").datepicker({ format: 'dd/mm/yyyy', todayHighlight: true });
            $("#ShippedDate").datepicker("setDate", new Date());
            $('#ShippedDate').on('changeDate', function (ev) { $(this).datepicker('hide') });
            $('#ShippedDate').datepicker('update');
            $('#ShippingCost').number(true, 0);
            $('#ShippingCost').on("input", function () {
                //updateGrandTotal();
            })

            $("#tbl-so").on("focus", ".quantity-input", function () {
                $(this).number(true, 0);
            });
            $("#tbl-so").on("focus", ".unit-price-input", function () {
                $(this).number(true, 0);
            });
            $("#tbl-so").on("focus", ".unit-price-bt-input", function () {
                $(this).number(true, 0);
            });
            $("#tbl-so").on("focus", ".line-amount-input", function () {
                $(this).number(true, 0);
            });
            $("#tbl-so").on("change paste keyup", ".quantity-input", function () {
                var soline = $(this).parent().parent();
                updateLineTotal(soline);
            });
            $("#tbl-so").on("change paste keyup", ".unit-price-bt-input", function () {
                var soline = $(this).parent().parent();
                updateLineTotal(soline);
            });
            $("#tbl-so").on("change paste keyup", ".unit-price-input", function () {
                var soline = $(this).parent().parent();
                updateLineTotal(soline);
            });
            $("#tbl-so").on("change", ".select-product-input", function () {
                var productId = $(this).val();
                var soline = $(this).parent().parent();
                $.each(g_products, function (index, element) {
                    if (element.ProductId == productId) {
                        var product_id_input = soline.find(".product-id-input");
                        var product_name_input = soline.find(".product-name-input");
                        var quantity_input = soline.find(".quantity-input");
                        var price_bt_input = soline.find(".unit-price-bt-input");
                        var price_input = soline.find(".unit-price-input");

                        // register events
                        quantity_input.number(true, 0);
                        price_bt_input.number(true, 0);
                        price_input.number(true, 0);

                        // assign value
                        product_id_input.val(element.ProductId);
                        product_name_input.val(element.ProductName);
                        quantity_input.val("1");
                        price_bt_input.val(element.PriceBT);
                        price_input.val(element.Price);

                        // update SO amount total
                        updateLineTotal(soline);
                    }
                });
            });
            $("#tbl-so").on("change", ".select-stock-input", function () {
                var stockId = $(this).val();
                var soline = $(this).parent().parent();
                $.each(g_stocks, function (index, element) {
                    if (element.StockId == stockId) {
                        soline.find(".stock-id-input").attr("value", element.StockId)
                        soline.find(".stock-name-input").attr("value", element.StockName)
                    }
                });
            });
            $("#btn-add-line").on('click', function () {
                addLine();
                updateGrandTotal();
                return false;
            });
            $("#tbl-so").on("click", ".btn-remove-line", function () {
                removeLine(this);
                updateGrandTotal();
                return false;
            });
        })

        function getProducts() {
            // get products
            $.ajax({
                url: '/Product/GetProducts',
                type: 'POST',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data.Error == 0)
                        g_products = data.Products;
                    else
                        showBootstrapDialog(1, 'Lỗi', data.Message);
                },
                error: function () {
                    // ajax error
                    showBootstrapDialog(1, 'Lỗi', 'Nạp danh sách sản phẩm thất bại');
                }
            });
        }

        function getStocks() {
            // get stocks
            $.ajax({
                url: '/Stock/GetStockList',
                type: 'POST',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data.Error == 0)
                        g_stocks = data.StockList;
                    else
                        showBootstrapDialog(1, 'Lỗi', data.Message);
                },
                error: function () {
                    // ajax error
                    showBootstrapDialog(1, 'Lỗi', 'Nạp danh sách kho thất bại');
                }
            });
        }

        function ajaxSearchCustomers(pageIndex) {
            var searchText = $('#searchText').val();
            $(".customer-list").html('<span class="text-danger">Đang nạp dữ liệu...</span>');
            $.ajax({
                url: '/Customer/Search/?searchText=' + searchText + '&pageIndex=' + pageIndex,
                type: 'POST',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data.Error == 0) {
                        console.debug('dbg', JSON.stringify(data));
                        // update global page index value
                        g_page_index = data.PageIndex;
                        g_page_total = data.PageTotal;
                        g_customers = data.Customers;
                        // show user list
                        showCustomersList(
                            data.Customers,
                            data.RowCount,
                            data.PageIndex,
                            data.PageSize,
                            data.PageTotal);
                        //alert(data.Customers.length);
                    }
                    else {
                        $(".customer-list").html('<span class="text-danger">' + data.Message + '</span>');
                    }
                },
                error: function (xhr) {
                    $(".customer-list").html('<span class="text-danger">' + xhr.responseText + '</span>');
                }
            });
        }

        function ajaxSelectCustomer(id) {
            $.each(g_customers, function (index, element) {
                if (element.CustomerID == id) {
                    //alert(element.FullName);
                    $('#CustomerName').val(element.FullName);
                    $('#CustomerAddress').val(element.Address);
                    $('#Phone').val(element.Phone);
                    $('#Email').val(element.Email);
                    $('#ShipAddress').val(element.ShippingAddress);
                    $('#ShipName').val(element.ShippingContact);
                    $('#Notes').val(element.Note);
                }
            });
        }

        function prevPage() {
            if (g_page_index > 1) g_page_index--;
            ajaxSearchCustomers(g_page_index);
        }

        function prevPage() {
            if (g_page_index < g_page_total) g_page_index++;
            ajaxSearchCustomers(g_page_index);
        }

        function showCustomersList(customers, rowCount, pageIndex, pageSize, pageTotal) {
            var html = '';
            var row_index = (pageIndex - 1) * pageSize;
            // create table headers
            html += '    <table class="table table-bordered table-nonfluid" style="width: auto;">\r\n';
            html += '        <tbody>\r\n';
            html += '            <tr class="alert-success">\r\n';
            html += '               <th class="text-nowrap text-center">STT</th>\r\n';
            html += '                <th class="text-nowrap">Tên khách hàng</th>\r\n';
            html += '                <th class="text-nowrap">Địa chỉ</th>\r\n';
            html += '                <th class="text-nowrap">Điện thoại</th>\r\n';
            html += '                <th class="text-nowrap">Thao tác</th>\r\n';
            html += '            </tr>\r\n';
            // create rows
            $.each(customers, function (index, element) {
                row_index++;
                var iconUrl = '/Content/Images/no_image.gif';
                var statusText = '<span class="text-success">Hiện</span>';
                if (element.IconURL != null) {
                    iconUrl = element.IconURL.replace('~', '');
                }
                if (!element.Displayed) statusText = '<span class="text-warning">Ẩn</span>';
                html += '            <tr>\r\n';
                html += '                <td class="text-nowrap text-center">' + row_index + '</td>\r\n';
                html += '                <td class="text-nowrap">' + element.FullName + '</td>\r\n';
                html += '                <td>' + element.Address + '</td>\r\n';
                html += '                <td class="text-center">' + element.Phone + '</td>\r\n';
                html += '                <td class="text-nowrap">\r\n';
                html += '                    <a href="javascript:void(0)" class="btn btn-sm btn-primary" onclick="ajaxSelectCustomer(' + element.CustomerID + ');" style="width:48px;" data-dismiss="modal">Chọn</a>\r\n';
                html += '                </td>\r\n';
                html += '            </tr>\r\n';
            });
            html += '       </tbody>\r\n';
            html += '    </table>\r\n';
            // paging
            if (pageTotal > 1) {
                html += '                    <ul class="pagination pagination-sm no-margin inline" style="margin-top:0px;">\r\n';
                html += '                        <li><a href="#" onclick="return prevPage()">«</a></li>\r\n';
                for (var i = 1; i <= pageTotal; i++) {
                    if (i == g_page_index) {
                        html += '                       <li><span class="text-blue">' + i + '</span></li>\r\n';
                    } else {
                        html += '                       <li><a href="#" onclick="return ajaxSearchCustomers(' + i + ')">' + i + '</a></li>\r\n';
                    }
                }
                html += '                        <li><a href="#" onclick="return nextPage()">»</a></li>\r\n';
                html += '                    </ul>\r\n';
            }

            // show customer list
            $(".customer-list").html(html);
        }

        function generateProductsSelect(products) {
            var html = "";
            html += "   <select class='form-control valid select-product-input' data-live-search='true' style='min-width:140px;'>";
            html += "       <option>--Sản phẩm--</option>";
            $.each(products, function (index, element) {
                html += "       <option value='" + element.ProductId + "'>" + element.ProductName + "</option>";
            });
            html += "   </select>";
            return html;
        }

        function generateStocksSelect(stocks) {
            var html = "";
            html += "   <select class='form-control valid select-stock-input' data-live-search='true' style='margin-left:4px; width:140px;'>";
            html += "       <option>--Kho--</option>";
            $.each(stocks, function (index, element) {
                html += "       <option value='" + element.StockId + "'>" + element.StockName + "</option>";
            });
            html += "   </select>";
            return html;
        }

        function addLine() {
            var row_count = $("#tbl-so > .tbl-so-line").length;
            var row_html = "";
            row_html += "<div style='display:table-row' class='tbl-so-line'>";
            row_html += "   <div style='display:table-cell; padding:2px; vertical-align:top; width:100%;'>";
            row_html += "       <input data-val='true' class='product-id-input' data-val-required='?' id='OrderDetails_" + row_count + " __ProductId' name='OrderDetails[" + row_count + "].ProductId' type='hidden'>"
            row_html += "       <input data-val='true' class='product-name-input' data-val-required='?' id='OrderDetails_" + row_count + " __ProductName' name='OrderDetails[" + row_count + "].ProductName' type='hidden'>"
            row_html += generateProductsSelect(g_products);
            row_html += "   </div>";
            row_html += "   <div style='display:table-cell; padding:2px; vertical-align:top;'>";
            row_html += "       <input data-val='true' class='stock-id-input' data-val-required='?' id='OrderDetails_" + row_count + " __StockId' name='OrderDetails[" + row_count + "].StockId' type='hidden'>"
            row_html += "       <input data-val='true' class='stock-name-input' data-val-required='?' id='OrderDetails_" + row_count + " __StockName' name='OrderDetails[" + row_count + "].StockName' type='hidden'>"
            row_html += generateStocksSelect(g_stocks);
            row_html += "   </div>";
            row_html += "   <div style='display:table-cell; padding:2px; vertical-align:top;'>";
            row_html += "       <input class='form-control text-center quantity-input' data-val='true' data-val-number='The field Quantity must be a number.' data-val-required='The Quantity field is required.' id='OrderDetails_" + row_count + "__Quantity' name='OrderDetails[" + row_count + "].Quantity' placeholder='Số lượng' style='margin-left:4px; width:75px;' type='text' value='1'>";
            row_html += "       <span class='field-validation-valid help-inline' data-valmsg-for='OrderDetails[" + row_count + "].Quantity' data-valmsg-replace='true'></span>";
            row_html += "   </div>";
            row_html += "   <div style='display:table-cell; padding:2px; vertical-align:top;'>";
            row_html += "       <input class='form-control text-right unit-price-bt-input' data-val='true' data-val-number='The field UnitPriceBT must be a number.' data-val-required='The UnitPriceBT field is required.' id='OrderDetails_" + row_count + "__UnitPriceBT' name='OrderDetails[" + row_count + "].UnitPriceBT' placeholder='Giá trước thuế' style='margin-left:2px; width:115px;' type='text' value='0'>";
            row_html += "       <span class='field-validation-valid help-inline' data-valmsg-for='OrderDetails[" + row_count + "].UnitPriceBT' data-valmsg-replace='true'></span>";
            row_html += "   </div>";
            row_html += "   <div style='display:table-cell; padding:2px; vertical-align:top;'>";
            row_html += "       <input class='form-control text-right unit-price-input' data-val='true' data-val-number='The field UnitPrice must be a number.' data-val-required='The UnitPrice field is required.' id='OrderDetails_" + row_count + "__UnitPrice' name='OrderDetails[" + row_count + "].UnitPrice' placeholder='Giá sau thuế' style='margin-left:2px; width:115px;' type='text' value='0'>";
            row_html += "       <span class='field-validation-valid help-inline' data-valmsg-for='OrderDetails[" + row_count + "].UnitPrice' data-valmsg-replace='true'></span>";
            row_html += "   </div>";
            row_html += "   <div style='display:table-cell; padding:2px; vertical-align:top;'>";
            row_html += "       <input class='form-control valid text-right line-amount-input' id='OrderDetails_" + row_count + "__Amount' name='OrderDetails[" + row_count + "].Amount' readonly='readonly' style='margin-left:2px; width:115px;' type='text' value='0'>";
            row_html += "   </div>";
            row_html += "   <div style='display:table-cell; padding:2px; vertical-align:top;' class='text-center'>";
            row_html += "       <a href='#' class='btn btn-danger btn-sm btn-remove-line' style='margin-left:4px; width:40px;'>-</a>";
            row_html += "   </div>";
            row_html += "</div>";
            // append new so line
            $("#tbl-so").append(row_html);
        }

        function removeLine(line) {
            // remove line
            $(line).closest('.tbl-so-line').remove();

            // update element names
            $(".tbl-so-line").each(function (index, line) {
                $(line).find(".stock-id").attr("id", "OrderDetails_" + index + "__StockId");
                $(line).find(".stock-id").attr("name", "OrderDetails[" + index + "].StockId");
                $(line).find(".stock-name").attr("id", "OrderDetails_" + index + "__StockName");
                $(line).find(".stock-name").attr("name", "OrderDetails[" + index + "].StockName");
                $(line).find(".product-id").attr("id", "OrderDetails_" + index + "__ProductId");
                $(line).find(".product-id").attr("name", "OrderDetails[" + index + "].ProductId");
                $(line).find(".product-name").attr("id", "OrderDetails_" + index + "__ProductName");
                $(line).find(".product-name").attr("name", "OrderDetails[" + index + "].ProductName");
                $(line).find(".quantity").attr("id", "OrderDetails_" + index + "__Quantity");
                $(line).find(".quantity").attr("name", "OrderDetails[" + index + "].Quantity");
                $(line).find(".unit-price-bt").attr("id", "OrderDetails_" + index + "__UnitPriceBT");
                $(line).find(".unit-price-bt").attr("name", "OrderDetails[" + index + "].UnitPriceBT");
                $(line).find(".unit-price").attr("id", "OrderDetails_" + index + "__UnitPrice");
                $(line).find(".unit-price").attr("name", "OrderDetails[" + index + "].UnitPrice");
                $(line).find(".line-amount").attr("id", "OrderDetails_" + index + "__UnitPrice");
                $(line).find(".line-amount").attr("name", "OrderDetails[" + index + "].UnitPrice");
            });
        }

        function updateLineTotal(soline) {

            // update line total
            var product_select = soline.find(".select-product-input");
            var product_id_input = soline.find(".product-id-input");
            var product_name_input = soline.find(".product-name-input");
            var quantity_input = soline.find(".quantity-input");
            var unit_price_bt_input = soline.find(".unit-price-bt-input");
            var unit_price_input = soline.find(".unit-price-input");
            var line_amount_input = soline.find(".line-amount-input");

            // register events
            quantity_input.number(true, 0);
            unit_price_bt_input.number(true, 0);
            unit_price_input.number(true, 0);
            line_amount_input.number(true, 0);

            var quantity = parseFloat(quantity_input.val().replace(/,/g, ''));
            var unitPriceBT = parseFloat(unit_price_bt_input.val().replace(/,/g, ''));
            var unitPrice = parseFloat(unit_price_input.val().replace(/,/g, ''));
            var lineAmountBT = quantity * unitPriceBT;
            var lineAmount = quantity * unitPrice;

            // validate values
            if (typeof quantity == 'NaN') {
                quantity = 0;
            }
            if (typeof unitPriceBT == 'NaN') {
                unitPriceBT = 0;
            }
            if (typeof unitPrice == 'NaN') {
                unitPrice = 0;
            }

            // logs
            //console.log(
            //    "  product = " + product_name_input.val() +
            //    ", quantity = " + quantity +
            //    ", Price = " + unitPriceBT +
            //    ", total = " + lineAmountBT)

            // set line total
            quantity_input.val(quantity);
            unit_price_bt_input.val(unitPriceBT);
            unit_price_input.val(unitPrice);
            line_amount_input.val(lineAmountBT);

            // update grand total
            updateGrandTotal();
        }

        function updateGrandTotal() {
            var totalAmountBT = 0;
            var totalAmountVAT = 0;
            var totalAmount = 0;

            var total_amount_bt_input = $(".total-amount-bt-input");
            var total_amount_vat_input = $(".total-amount-vat-input");
            var total_amount_input = $(".total-amount-input");
            var shipping_cost_input = $(".shipping-cost-input");

            total_amount_bt_input.number(true, 0);
            total_amount_vat_input.number(true, 0);
            total_amount_input.number(true, 0);

            var shipping_cost = parseFloat(shipping_cost_input.val().replace(/,/g, ''));

            // scan so lines
            $(".tbl-so-line").each(function () {
                var soline = $(this);
                var quantity_input = soline.find(".quantity-input");
                var unit_price_bt_input = soline.find(".unit-price-bt-input");
                var unit_price_input = soline.find(".unit-price-input");
                var line_amount_input = soline.find(".line-amount-input");

                var quantity = parseFloat(quantity_input.val().replace(/,/g, ''));
                var unitPriceBT = parseFloat(unit_price_bt_input.val().replace(/,/g, ''));
                var unitPrice = parseFloat(unit_price_input.val().replace(/,/g, ''));
                var lineAmountBT = quantity * unitPriceBT;
                var lineAmount = quantity * unitPrice;

                totalAmountBT += lineAmountBT;
                totalAmountVAT += quantity * (unitPrice - unitPriceBT);
                totalAmount += lineAmount;
            });
            //totalAmount += shipping_cost;

            total_amount_bt_input.val(totalAmountBT);
            total_amount_vat_input.val(totalAmountVAT);
            total_amount_input.val(totalAmount);
        };


    </script>
}





